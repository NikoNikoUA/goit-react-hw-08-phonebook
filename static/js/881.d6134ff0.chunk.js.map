{"version":3,"file":"static/js/881.d6134ff0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Container.styled.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  text-shadow: none;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  text-shadow: 1px 1px 1px rgb(54, 50, 50);\n`;\n\nexport const Input = styled(Field)`\n  margin-top: 8px;\n  display: block;\n  border-radius: 15px;\n  border: 1px solid white;\n  height: 30px;\n  width: 200px;\n  padding: 5px;\n  font-size: 15px;\n`;\n\nexport const BtnAddContact = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  min-width: 70px;\n  height: 40px;\n  border: none;\n  border-radius: 15px;\n  font-weight: bold;\n  background-color: ${props => props.theme.colors.btnColor};\n\n  box-shadow: 0px 0px 4px white;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.btnHover};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport * as yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { Label, Input, BtnAddContact, ErrorMsg } from './ContactForm.styled';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nNotify.init({\n  borderRadius: '11px',\n  position: 'top-right',\n  width: '400px',\n  timeout: 4000,\n  clickToClose: true,\n  cssAnimationStyle: 'zoom',\n});\n\nconst Schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Required')\n    .min(3, 'Name must be 3-25 characters long')\n    .max(25, 'Name must be 3-25 characters long')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Enter valid symbols'\n    ),\n  number: yup\n    .string()\n    .required('Required')\n    .min(6, 'Number must be 6-13 characters long')\n    .max(13, 'Number must be 6-13 characters long')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Enter valid symbols'\n    ),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        number: '',\n        name: '',\n      }}\n      validationSchema={Schema}\n      onSubmit={(values, actions) => {\n        const { name, number } = values;\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n          )\n        ) {\n          return Notify.info(`${name} is already among your contacts`);\n        }\n\n        const contact = {\n          name,\n          number,\n        };\n        dispatch(addContact(contact))\n          .unwrap()\n          .then(() =>\n            Notify.success(\n              `${name} has been successfully added to your contacts`\n            )\n          )\n          .catch(error => error.message);\n\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" placeholder=\"Enter name...\" />\n          <ErrorMsg component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" placeholder=\"Enter number...\" />\n          <ErrorMsg component=\"div\" name=\"number\" />\n        </Label>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n  gap: 10px;\n`;\n\nexport const BtnDeleteItem = styled.button`\n  min-width: 70px;\n  height: 30px;\n  border: none;\n  border-radius: 15px;\n  font-weight: bold;\n  box-shadow: 0px 0px 4px white;\n  background-color: ${props => props.theme.colors.btnColor};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.btnHover};\n  }\n`;\n","import { BtnDeleteItem, ListItem } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nNotify.init({\n  borderRadius: '11px',\n  position: 'top-right',\n  width: '400px',\n  timeout: 4000,\n  clickToClose: true,\n  cssAnimationStyle: 'zoom',\n});\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveContact = () => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => Notify.success('The contact has been successfully removed'))\n      .catch(error => error.message);\n  };\n\n  return (\n    <ListItem key={id}>\n      {name}: {number}\n      <BtnDeleteItem onClick={() => onRemoveContact(id)}>Remove</BtnDeleteItem>\n    </ListItem>\n  );\n};\n","import { ContactsList } from './ContactList.styled';\nimport { ContactListItem } from '../../components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ name, number, id }) => {\n        return <ContactListItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  text-shadow: 1px 1px 1px rgb(54, 50, 50);\n`;\n\nexport const InputFilter = styled.input`\n  margin-top: 8px;\n  display: block;\n  border-radius: 15px;\n  border: 1px solid white;\n  height: 30px;\n  width: 200px;\n  padding: 5px;\n  font-size: 15px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterValue } from '../../redux/contacts/filterSlice';\nimport { LabelFilter, InputFilter } from '../Filter/Filter.styled';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onFilterChange = event => {\n    dispatch(filterValue(event.target.value));\n  };\n\n  const filter = useSelector(selectFilter);\n\n  return (\n    <>\n      <LabelFilter>\n        Find contacts by name\n        <InputFilter\n          type=\"text\"\n          value={filter}\n          onChange={onFilterChange}\n          placeholder=\"Filter by name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        ></InputFilter>\n      </LabelFilter>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid black;\n  width: 500px;\n  height: 500px;\n  margin-top: 80px;\n  position: relative;\n  background-color: ${props => props.theme.colors.containerColor};\n\n  border: none;\n  border-radius: 15px;\n\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 60%;\n  border: 1px solid black;\n  padding: 40px;\n\n  position: absolute;\n  top: -50px;\n  left: -50px;\n\n  box-shadow: 2px 2px 4px white;\n  background-color: ${props => props.theme.colors.backgroundColor};\n  border: none;\n  border-radius: 8px;\n`;\n\nexport const StatisticsContainer = styled.div`\n  position: absolute;\n  background-color: ${props => props.theme.colors.backgroundColor};\n  top: 265px;\n  right: -70px;\n  width: 350px;\n  border-radius: 8px;\n  box-shadow: 0px 0px 8px white;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 15px;\n`;\n\nexport const MainHeading = styled.h1`\n  margin: 0;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  color: rgb(145, 233, 123);\n`;\n\nexport const ContactsHeading = styled.h2`\n  margin: 0;\n  font-weight: bold;\n  color: rgb(145, 233, 123);\n`;\n\nexport const NoContactsText = styled.p`\n  font-size: 14px;\n  text-align: center;\n  font-weight: bold;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { GiRotaryPhone } from 'react-icons/gi';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport { ContactForm } from '../../src/components/ContactForm/ContactForm';\nimport { ContactList } from '../../src/components/ContactList/ContactList';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport { Filter } from '../components/Filter/Filter';\nimport { selectError } from '../redux/contacts/selectors';\nimport {\n  Container,\n  FormContainer,\n  StatisticsContainer,\n  ContactsHeading,\n  MainHeading,\n  NoContactsText,\n} from '../../src/components/Container.styled.js';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <FormContainer>\n        <MainHeading>\n          Phonebook <GiRotaryPhone />\n        </MainHeading>\n        <ContactForm />\n      </FormContainer>\n      <StatisticsContainer>\n        <ContactsHeading>Contacts</ContactsHeading>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {contacts?.length ? (\n          <ContactList />\n        ) : (\n          <NoContactsText>\n            There are no contacts in your phoneboook\n          </NoContactsText>\n        )}\n      </StatisticsContainer>\n    </Container>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ErrorMsg","styled","ErrorMessage","props","theme","colors","Label","Input","Field","BtnAddContact","btnColor","btnHover","Notify","borderRadius","position","width","timeout","clickToClose","cssAnimationStyle","Schema","yup","shape","required","min","max","matches","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","some","addContact","unwrap","then","catch","message","resetForm","type","placeholder","component","ContactsList","ListItem","BtnDeleteItem","ContactListItem","id","onClick","deleteContact","ContactList","filteredContacts","map","LabelFilter","InputFilter","Filter","value","onChange","event","filterValue","target","pattern","Container","containerColor","FormContainer","backgroundColor","StatisticsContainer","MainHeading","ContactsHeading","NoContactsText","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}