{"version":3,"file":"static/js/854.39e94456.chunk.js","mappings":"yQAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iFACV,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAKHC,EAAYN,EAAAA,GAAAA,IAAH,yQAOA,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,IAAvB,IAOdC,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,qPAKI,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,IAAvB,IAOP,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,cAAvB,IAIZC,EAAQX,EAAAA,GAAAA,MAAH,wMASP,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,IAAvB,IAGHK,EAASZ,EAAAA,GAAAA,OAAH,2PAOG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,eAAvB,IAKH,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,cAAvB,IAIhBI,EAAmBd,EAAAA,GAAAA,IAAH,uD,SCrD7Be,EAAAA,OAAAA,KAAY,CACVC,aAAc,OACdC,SAAU,YACVC,MAAO,QACPC,QAAS,IACTC,cAAc,EACdC,kBAAmB,SAGd,IAAMC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IACfG,SACAC,MAAK,kBACJnB,EAAAA,OAAAA,QAAA,gEADI,IAKLoB,OAAM,SAAA9B,GAAK,OAAIU,EAAAA,OAAAA,QAAA,iBAAyBV,EAAM+B,SAAnC,IAEdL,EAAQM,WACT,EAjBH,UAmBE,SAAC,KAAD,CAAMC,aAAa,MAAnB,UACE,UAAChC,EAAD,YACE,sCACA,UAACK,EAAD,CAAO4B,QAAQ,OAAf,sBAEE,SAAC/B,EAAD,CAAOgC,KAAK,OAAOC,GAAG,OAAOf,KAAK,UAClC,SAAC3B,EAAD,CAAU2C,UAAU,MAAMhB,KAAK,aAGjC,UAACf,EAAD,CAAO4B,QAAQ,QAAf,mBAEE,SAAC/B,EAAD,CAAOgC,KAAK,QAAQC,GAAG,QAAQf,KAAK,WACpC,SAAC3B,EAAD,CAAU2C,UAAU,MAAMhB,KAAK,cAGjC,UAACf,EAAD,CAAO4B,QAAQ,WAAf,sBAEE,SAAC/B,EAAD,CAAOgC,KAAK,WAAWC,GAAG,WAAWf,KAAK,cAC1C,SAAC3B,EAAD,CAAU2C,UAAU,MAAMhB,KAAK,iBAGjC,SAACd,EAAD,CAAQ4B,KAAK,SAAb,uBACA,UAAC1B,EAAD,YACE,6CACA,SAAC,KAAD,CAAM6B,GAAG,SAAT,6BAMX,ECzEc,SAASC,IACtB,OACE,4BAEE,6CAEA,SAACtB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 14px;\n  text-shadow: none;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${props => props.theme.colors.form};\n  border-radius: 10px;\n  width: 300px;\n  padding: 20px;\n  gap: 15px;\n`;\n\nexport const Input = styled(Field)`\n  padding: 8px 12px;\n  font-size: 18px;\n\n  cursor: pointer;\n  border: 2px solid ${props => props.theme.colors.form};\n  border-radius: 5px;\n  outline: none;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    border-color: ${props => props.theme.colors.containerColor};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n\n  cursor: pointer;\n  font-size: 15px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.form};\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  min-width: 70px;\n  height: 35px;\n  border: none;\n  border-radius: 15px;\n  font-weight: bold;\n  background-color: ${props => props.theme.colors.backgroundColor};\n\n  box-shadow: 0px 0px 4px white;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.containerColor};\n  }\n`;\n\nexport const AddTextContainer = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../../src/redux/auth/operations';\nimport { Formik, Form } from 'formik';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  ErrorMsg,\n  Label,\n  Input,\n  Button,\n  AddTextContainer,\n} from './RegisterForm.styled.js';\n\nNotify.init({\n  borderRadius: '11px',\n  position: 'top-right',\n  width: '400px',\n  timeout: 4000,\n  clickToClose: true,\n  cssAnimationStyle: 'zoom',\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, actions) => {\n        dispatch(register(values))\n          .unwrap()\n          .then(() =>\n            Notify.success(\n              `Congratulations and welcome! You have registered successfully`\n            )\n          )\n          .catch(error => Notify.failure(`Error: ${error.message}`));\n\n        actions.resetForm();\n      }}\n    >\n      <Form autoComplete=\"off\">\n        <Container>\n          <h2>Register</h2>\n          <Label htmlFor=\"name\">\n            Username\n            <Input type=\"text\" id=\"name\" name=\"name\" />\n            <ErrorMsg component=\"div\" name=\"name\" />\n          </Label>\n\n          <Label htmlFor=\"email\">\n            Email\n            <Input type=\"email\" id=\"email\" name=\"email\" />\n            <ErrorMsg component=\"div\" name=\"email\" />\n          </Label>\n\n          <Label htmlFor=\"password\">\n            Password\n            <Input type=\"password\" id=\"password\" name=\"password\" />\n            <ErrorMsg component=\"div\" name=\"password\" />\n          </Label>\n\n          <Button type=\"submit\">Register</Button>\n          <AddTextContainer>\n            <p>Have an account?</p>\n            <Link to=\"/login\">Log In</Link>\n          </AddTextContainer>\n        </Container>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../../src/components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <Helmet> */}\n      <title>Registration</title>\n      {/* </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["ErrorMsg","styled","ErrorMessage","props","theme","colors","error","Container","form","Input","Field","containerColor","Label","Button","backgroundColor","AddTextContainer","Notify","borderRadius","position","width","timeout","clickToClose","cssAnimationStyle","RegisterForm","dispatch","useDispatch","initialValues","name","email","password","onSubmit","values","actions","register","unwrap","then","catch","message","resetForm","autoComplete","htmlFor","type","id","component","to","Register"],"sourceRoot":""}